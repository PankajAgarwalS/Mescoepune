#include <bits/stdc++.h>
using namespace std;

vector<string> split(string s) {
    vector<string> ret;
    string w = "";
    for (int i = 0; i < s.length(); i++) {
        if (s[i] == ' ') {
            ret.push_back(w);
            w = "";
            continue;
        }
        w += s[i];
    }
    return ret;
}

int stringToInt(string s) {
    int n = 0;
    for (int i = 0; i < s.length(); i++) {
        n = n * 10;
        n += int(s[i] - '0');
    }
    return n;
}

string charToString(char c) {
    string s = "";
    s += c;
    return s;
}

class Pass1 {
public:
    vector<string> input;
    vector<pair<string, vector<int>> > mnt;
    vector<pair<string, string>> kpdtab;
    vector<string> mdt;
    vector<pair<int, string>> pptab;
    map<string, int> pptab1;

    Pass1() {
        fstream file;
        string sfile = "";
        file.open("input.txt", ios::in);
        while (getline(file, sfile)) {
            input.push_back(sfile);
        }
        file.close();
    }

    void mainPass1() {
        int isMacroDef = 0;
        for (int i = 0; i < input.size(); i++) {
            vector<string> line = split(input[i]);

            if (line[0] == "MACRO") {
                isMacroDef = 1;
                continue;
            } else if (isMacroDef == 1) {
                pptab.clear();
                pptab1.clear();
                isMacroDef = 0;
                string macroName = line[0];
                int pp = line.size() - 1;
                int kp = 0;
                for (int j = 1; j <= pp; j++) {
                    string w = line[j];
                    string var = "";
                    string val = "";
                    int st = 0;
                    for (int l = 0; l < w.size(); l++) {
                        if (w[l] == '&') {
                            continue;
                        }
                        if (w[l] == '=') {
                            st = 1;
                            continue;
                        }
                        if (st == 0) {
                            var += w[l];
                        }
                        if (st == 1) {
                            val += w[l];
                        }
                    }
                    pptab.push_back({j, var});
                    pptab1[var] = j;
                    if (st == 1) {
                        kpdtab.push_back({var, val});
                    }
                }
                vector<int> md;
                md.push_back(pptab.size());
                md.push_back(1);
                if (i == 1) {
                    md.push_back(1);
                    md.push_back(1);
                } else {
                    md.push_back(5);
                    md.push_back(2);
                }
                mnt.push_back({macroName, md});
            } else {
                string oline = line[0];
                oline += " (P,";
                for (int m = 1; m < line.size(); m++) {
                    string w = line[m];
                    int ind = pptab1[charToString(w[1])];
                    oline += char(ind + '0');
                    oline += ") ";
                }
                mdt.push_back(oline);
            }
        }

        fstream file2;
        file2.open("output.txt", ios::app);
        file2 << "--------------------MNT----------------------------\n\n";
        for (auto i : mnt) {
            file2 << i.first << " ";
            cout << i.first << " ";
            for (auto j : i.second) {
                file2 << j << " ";
                cout << j << " ";
            }
            file2 << "\n";
        }
        file2 << "\n\n--------------------KPDTAB---------------------------\n\n";
        for (auto i : kpdtab) {
            file2 << i.first << " " << i.second << endl;
        }
        file2 << "\n\n--------------------MDT-------------------------------\n\n";
        for (auto i : mdt) {
            file2 << i << endl;
        }
        file2.close();
    }
};

int main() {
    Pass1 p;
    p.mainPass1();
    return 0;
}

input:
MACRO
ONE &O &N &E=AREG
MOVER &E &O
ADD &E &N
MOVEM &E &O
MEND
MACRO
TWO &T &W &O=DREG
MOVER &O &T
ADD &O &W
MOVEM &O &T
MEND
START
READ O
READ T
ONE O 9
TWO T 7
STOP T 7
O DS 1
T DS 1
END
